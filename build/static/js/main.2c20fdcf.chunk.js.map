{"version":3,"sources":["assets/back-trees-only.png","assets/back.png","assets/main.png","assets/veil.png","config/index.js","components/Cloud.js","components/Veil.js","App.js","index.js"],"names":["module","exports","images","backTreesOnly","require","back","main","veil","Cloud","props","state","color","Math","floor","random","size","this","canvasHeight","opacity","cloudHaze","round","zIndex","travelDuration","animationNumber","ceil","dimVeil","className","id","style","top","fontSize","filter","position","animation","React","PureComponent","localOpacity","toString","alt","src","config","transition","Component","App","canvasWidth","cloudIn","cloudOut","screenWidth","moonDiameter","setTimeout","setState","veilOpacity","firstCall","calcAllDimensions","window","innerWidth","innerHeight","cloudNumber","cloudControl","forEach","i","addEventListener","repeatRate","allClouds","push","key","Veil","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c20fdcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back-trees-only.1a95c635.png\";","module.exports = __webpack_public_path__ + \"static/media/back.34db220d.png\";","module.exports = __webpack_public_path__ + \"static/media/main.f2c27190.png\";","module.exports = __webpack_public_path__ + \"static/media/veil.17955c04.png\";","export default {\n    images: {\n        backTreesOnly: require('../assets/back-trees-only.png'),\n        back: require('../assets/back.png'),\n        main: require('../assets/main.png'),\n        veil: require('../assets/veil.png')\n    }\n}\n","import React from 'react'\n\nclass Cloud extends React.PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    //Important to note that the below variables had to be calculated here, locally in this view component, because had they been calculated in App.js and passed as props it would've triggered a rerender with each setState in App.js which would've, in turn, triggered another call to the loop over the cloud array which, in turn, would've triggered another rerender... i.e. an infinite loop that was crashing the app as well as causing the clouds to disappear, reappear in random places with each rerender. So the dimVeil method of App.js is passed from App.js to Cloud.js which, in turn, calls it after travelDuration and size have been established.\n    //Also, filter: `drop-shadow...` had to be added to the style property because Font Awesome comprises svg files, not fonts, so textShadow (and of course boxShadow) wouldn't work. Note, a drop shadow is effectively a blurred, offset version of the input image's alpha mask, drawn in a specific color and composited below the image, so not much wiggle room to do anything too creative with it.\n\n    render() {\n\n        let color = Math.floor(Math.random() * 360)\n        let size = this.props.canvasHeight / (2 + Math.random() * 4)\n        let opacity = .2 + Math.random() * .5\n        let cloudHaze = Math.round(this.props.canvasHeight / 16)\n        let zIndex = Math.random() * 9000\n        let travelDuration = 32 + Math.random() * 32\n        let animationNumber = Math.ceil(Math.random() * 32)\n\n        this.props.dimVeil(travelDuration, size)\n\n        return(\n\n            <div\n                className='clouds'\n                id='cloud'\n                style={{\n                    top: '50%',\n                    }}>\n\n                <i\n                    className='fa fa-cloud'\n                    style={{\n                        fontSize: `${size}px`,\n                        color: `hsla(${color}, 100%, 94%, ${opacity})`,\n                        filter: `drop-shadow(0px 0px ${cloudHaze}px hsla(${color}, 100%, 96%, 1)`,\n                        position: 'absolute',\n                        zIndex: `${zIndex}`,\n                        animation: `motionSizeAndFlip${animationNumber} ${travelDuration}s linear forwards`\n                        }}>\n                </i>\n\n            </div>\n        )\n    }\n}\n\nexport default Cloud\n","import React from 'react'\nimport '../App.css'\nimport config from '../config'\n\n//Float point conversion was giving values like '8.9999999999999' hence the verbose localOpacity = `${((Math.round(this.props.opacity * 10))/10).toString()}`\n\nclass Cloud extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    render() {\n        let localOpacity\n        if (this.props.opacity >= 1) {\n            localOpacity = '.9'\n        } else {\n            localOpacity = `${((Math.round(this.props.opacity * 10))/10).toString()}`\n        }\n\n        return(\n\n            <img\n                alt={'veil'}\n                src={config.images.veil}\n                className='canvas'\n                style={{\n                    opacity: localOpacity,\n                    transition: 'opacity 1.5s ease'\n                    }}/>\n        )\n    }\n}\n\nexport default Cloud\n","import React from 'react'\nimport './App.css'\nimport config from './config'\nimport { Cloud, Veil } from './components'\n\n//NOTE: Needed to manually add \"homepage\": \".\", to package.json in order get build/index.html to work.\n//Deploying a subfolder to GitHub Pages https://gist.github.com/cobyism/4730490\n\n// --Seting up a custom domain--\n//https://www.youtube.com/watch?v=mPGi1IHQxFM\n//https://medium.com/employbl/launch-a-website-with-a-custom-url-using-github-pages-and-google-domains-3dd8d90cc33b\n//https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site#configuring-a-records-with-your-dns-provider\n\nclass App extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            firstCall: true,\n            screenWidth: 0,\n            canvasHeight: 0,\n            canvasWidth: 0,\n            moonDiameter: 0,\n            cloudNumber: 0,\n            veilOpacity: .6\n        }\n    }\n\n    dimVeil = (travelDuration, size) => {\n\n        travelDuration *= 1000 //Convert seconds to milliseconds for use in setTimeouts.\n\n        if (this.state.canvasWidth === 0) return //If canvasWidth hasn't been set yet it will be null and the calculations below will crash the app.\n\n        let cloudIn = travelDuration / 2 //The point at which each cloud enters from the left in front of the moon happens to be exactly the center of the screen. It's travel duration is the full width of the view port (translateX(-100vw) through translateX(100vw) or translateX(100vw) through translateX(-100vw) in the case of the cloud icon being flipped... see App.css for these @keyframes) so the moment the cloud enters in front of the moon is exactly it's travelDuration divided by 2.\n        let cloudOut = cloudIn + ((travelDuration/2) / (this.state.screenWidth / this.state.moonDiameter)) //The moment at which the cloud leaves the moon is the moment at which it enters the moon plus a function of its own size and the diamter of the moon.\n\n        setTimeout(() => { //Use cloudIn and cloudOut to affect the opacity of the veil (dimness of the room) which is the only prop passed to Veil.js\n            this.setState({\n                veilOpacity: this.state.veilOpacity + .1,\n                firstCall: false\n            })\n        }, cloudIn)\n\n        setTimeout(() => { //Use cloudIn and cloudOut to affect the opacity of the veil (dimness of the room) which is the only prop passed to Veil.js\n            this.setState({\n                veilOpacity: this.state.veilOpacity - .1,\n                firstCall: false\n            })\n        }, cloudOut)\n    }\n\n    calcAllDimensions = () => { //Get the size of the screen, canvas, and moon on both load and on resize\n        let screenWidth = window.innerWidth\n        let canvasHeight = window.innerHeight\n        let canvasWidth = Math.round(canvasHeight * 1.323572474377745) // screenWidth < canvasHeight * 1.323572474377745 ? screenWidth : Math.round(canvasHeight * 1.323572474377745)\n        let moonDiameter = Math.round(canvasWidth * 0.199121522693997)\n        this.setState({\n            screenWidth: screenWidth,\n            canvasHeight: canvasHeight,\n            canvasWidth: canvasWidth,\n            moonDiameter: moonDiameter\n        })\n    }\n\n    componentDidMount() {\n        //Fire up event listeners when App.js mounts\n        ['load', 'resize'].forEach(i => window.addEventListener(i, this.calcAllDimensions))\n        //Fire up the cloud's \"game loop\" as a controller that calls itself randomly between 1 and 9s and, in the interim, increases the cloudNumber by 1\n        let cloudControl\n        (cloudControl = () => {\n            let repeatRate = 1000 + 9000 * Math.random()\n            this.setState({\n                cloudNumber: this.state.cloudNumber + 1\n            })\n            setTimeout(cloudControl, repeatRate)\n        })()\n    }\n\n    render() {\n\n        const allClouds = []\n        let i\n\n        for (i = 0; i < this.state.cloudNumber; i++) {\n            allClouds.push(<Cloud key={i} canvasHeight={this.state.canvasHeight} canvasWidth={this.state.canvasWidth} dimVeil={this.dimVeil}/>)\n        }\n\n        return (\n            <div className=\"canvas-parent\">\n\n                <img alt={\"back\"} src={config.images.back} className=\"canvas\" id=\"back-image\"/>\n\n                {allClouds}\n\n\n                <img alt={\"back trees only\"} src={config.images.backTreesOnly} className=\"canvas\" id=\"back-trees-only-image\"/>\n\n                <img alt={\"main\"} src={config.images.main} className=\"canvas\" id=\"main-image\"/>\n\n\n                <Veil opacity={this.state.veilOpacity} key={2}/>\n\n\n\n           </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}