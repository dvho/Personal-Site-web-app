html {
    overflow: hidden;
}
body {
    margin: 0;
    background-color: rgb(1, 1, 20);
    user-select: none;
}


.canvas-dev {
    text-align: center;
    height: 100vh;
}
.canvas-parent {
    text-align: center;
    transition: opacity .3s ease;
}
.canvas {
    position: absolute;
    height: 100vh;
    transform: translateX(-50%);
    border-left: solid 800px rgb(1, 1, 20); /* Only way to hide clouds from exiting out from behind main-image was to give main-image a border, since it's dynamic positioning/sizing made it impossible to flank it with similarly dynamic divs that would fit flush against its left and right sides */
    border-right: solid 800px rgb(1, 1, 20);
}


.clouds {
    width: 100%;
    height: 100vh;
    position: absolute;
}


.performance-button-container {
    position: absolute;
    top: 0px;
    right: 0px;
    cursor: pointer;
}
.performance-button {
    margin: 0;
    opacity: .35;
    border-radius: 50%;
    background-color: rgb(150,150,255);
    transition: all .4s ease;
}
.performance-button:hover {
    opacity: 1;
    background-color: red;
    transition: all .2s ease;
}


.ripple {
    position: absolute;
    border-radius: 50%;
    animation: rippleEffect .41s cubic-bezier(0, 0, 0, 1); /* ripple active time is 400ms and time of animation needs to be just a bit longer than that otherwise there'll be an animation glitch */
}


.next-and-previous-icons {
    color: rgb(60,20,1);
}
.play-icon {
    color: rgb(1,1,30);
}
.play-active {
    animation: play-icon-pulse 1s infinite; /* add animated property here that lightens color in an infinite pulse*/
}
.pause-icon {
    color: rgb(1,30,1);
}
.pause-active {
    animation: pause-icon-pulse .5s infinite; /* add animated property here that lightens color in an infinite pulse*/
}
.stop-icon {
    color: rgb(40,1,10);
}
.audio-icon {
    opacity: .75;
    cursor: pointer;
    transition: all .4s ease;
}
.audio-icon:hover {
    color: rgb(0,170,170);
    opacity: .5;
    transform: scale(1.2);
    transition: all .2s ease;
}
.slider {
  -webkit-appearance: none;
  width: 100%;
  height: 1px;
  background: rgba(32,32,1,.5);
  outline: none;
  -webkit-transition: .2s;
  transition: opacity .2s;
}
.slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 34px;
  height: 17px;
  border-radius: 25%;
  opacity: .75;
  background: rgb(32,32,1);
  cursor: pointer;
  transition: all .4s ease;
}
.slider::-moz-range-thumb {
  width: 34px;
  height: 17px;
  border-radius: 25%;
  opacity: .75;
  background: rgb(32,32,1);
  cursor: pointer;
  transition: all .4s ease;
}
.slider::-webkit-slider-thumb:hover {
    opacity: .5;
    background: rgb(0,170,170);
    transform: scale(1.2);
    transition: all .2s ease;
}
.slider::-moz-range-thumb:hover {
    opacity: .5;
    background: rgb(0,170,170);
    transform: scale(1.2);
    transition: all .2s ease;
}


.title {
    font-family: Nothing You Could Do, cursive;
    color: rgba(255,255,255,.65);
    cursor: pointer;
    transition: all .4s ease;
}
.title:hover {
    color: rgba(0,170,170,.95);
    transform: scale(1.15);
    transition: all .2s ease;
}


.form-container {
    visibility: hidden;
    position: absolute;
    width: 200px;
    top: 55%;
    transform: translateY(-50%) translateX(0%) scaleX(.7);
    transform-origin: right;
    opacity: 0;
    transition: all .3s ease;
}
.form-container-revealed {
    visibility: visible;
    transform: translateY(-50%) translateX(-10%) scaleX(1);
    opacity: 1;
    transition: all .3s ease;
}
.form-send-narrow-animation {
    transform: translateY(-120%) translateX(-200%) skew(-.06turn, -35deg) scale(.1);
    opacity: 0;
    transition: all 1.5s cubic-bezier(.4,0,1,.9) 1s;
}
.form-send-wide-animation {
    transform: translateY(-120%) translateX(-375%) skew(-.06turn, -35deg) scale(.1);
    opacity: 0;
    transition: all 1.5s cubic-bezier(.4,0,1,.9) 1s;
}

.form-fields {
    font-size: 19px;
    font-family: 'Cormorant Garamond', serif;
    margin: 1px;
    padding: 5px 10px;
    border: none;
    border-radius: 5px;
    background-color: rgba(255,255,255,.85);
    transition: all .3s ease;
}
.form-fields::placeholder {
    color: rgba(0,0,0,.3);
}
.form-fields:hover {
    background-color: rgba(228,228,255,.95);
}
.form-fields.message::placeholder {
    font-style: italic;
}

.button {
    font-size: 16px;
    background-color: rgba(0,170,170,.95);
}
.form-fields.button:hover {
    background-color: rgba(245,245,215,.85);
}
.button-text {
    font-family: Nothing You Could Do, cursive;
    color: rgba(255,255,255,1);
    transition: all .3s ease;
}
.form-fields.button:hover .button-text {
    color: rgba(1,1,40,1);
    font-weight: 800;
}


.info-sheet-container {
    visibility: hidden;
    position: absolute;
    width: 230px;
    height: 300px;
    top: 50%;
    overflow: auto;
    border-top-left-radius: 10px;
    border-bottom-left-radius: 10px;
    padding: 15px 20px 10px 20px;
    font-family: 'Cormorant Garamond', serif;
    font-size: 19px;
    color: rgb(1,1,40);
    background-color: rgba(255,255,255,.85);
    transform: translateY(-50%) scaleX(.7);
    transform-origin: right;
    opacity: 0;
    transition: all .3s ease;
}
.info-sheet-container-revealed {
    visibility: visible;
    transform: translateY(-50%) scaleX(1);
    opacity: 1;
    transition: all .3s ease;
}
.info-sheet-heading {
    font-size: 34px;
    font-weight: 700;
}


.social-menu-container {
    visibility: visible;
    position: absolute;
    display: flex;
    flex-direction: row;
    width: 60px;
    height: 230px;
    top: 55%;
    transform: translateY(-50%) translateX(0%) scaleX(1);
}
.social-icons-column {
    display: flex;
    flex-direction: column;
    justify-content: center;
    font-size: 0px;
    background-color: rgba(255,255,255,.35);
    transition: all .5s ease;
}
.social-icons-column-open {
    flex: 1;
    font-size: 32px;
    padding-left: 4px;
    background-color: rgba(255,255,255,.65);
    transition: all .5s ease;
}
/* Can do transition all for mail:hover, github:hover and npm:hover, but not for mail, github and npm because it interferes with the CLOSING of socialIconsColumn, so the net effect is when unhovering, the colors (merely the alpha channel of the rgba in these cases) toggle abruptly but the transform scale toggles as normal which generally smoothens the whole experience so that it's not noticeable */
.mail {
    margin-top: -3px;
    color: rgb(40,120,0);
    cursor: pointer;
    transition: transform .4s ease;
}
.linkedin {
    margin-top: -2px;
    margin-bottom: -2px;
    color: rgb(16,116,174);
    cursor: pointer;
    transition: transform .4s ease;
}
.resume {
    color: rgb(150,100,0,1);
    cursor: pointer;
    transition: transform .4s ease;
}
.github {
    color: rgb(124,14,124);
    cursor: pointer;
    transition: transform .4s ease;
}
.npm {
    margin-top: -4px;
    margin-bottom: -4px;
    color: rgb(201,8,19);
    cursor: pointer;
    transition: transform .4s ease;
}
.info {
    color: rgb(145,15,0,1);
    cursor: pointer;
    transition: transform .4s ease;
}
.social-icon:hover {
    color: rgba(0,170,170,.95);
    transform: scale(1.2);
    transition: all .2s ease;
}


.pull-chevron-column {
    display: flex;
    flex-direction: column;
    /* letting font-size dictate width rather than something like "flex: 1" */
    justify-content: center;
    background-color: rgba(255,255,255,.35);
    border-top-right-radius: 10px;
    border-bottom-right-radius: 10px;
    padding-left: 2px;
    cursor: pointer;
    font-size: 20px;
    padding-right: 3px;
    animation: pull-chevron-pulse-closed 1.25s infinite;
    transition: all .5s ease;
}
.pull-chevron-column:hover {
    background-color: rgba(255,0,0,.35);
    transition: all .5s ease;
}
.pull-chevron-column-open {
    animation: null;
    color: rgb(1,1,40);
    background-color: rgba(255,255,255,.65);
    animation: pull-chevron-pulse-open 1.25s infinite;
    transition: all .5s ease;
}
.pull-chevron-column-open:hover {
    background-color: rgba(200,200,255,.65);
    transition: all .5s ease;
}


.social-menu-labels-container {
    position: absolute;
    display: flex;
    flex-direction: row;
    width: 60px;
    height: 210px;
    top: 55%;
    transform: translateY(-50%) translateX(0%) scaleX(1);
}
.social-menu-labels-container-visible {
    opacity: 1;
    transition: opacity .75s ease .25s;
}
.social-menu-labels-container-invisible {
    opacity: 0;
    transition: opacity .25s ease;
}
.arrow {
    position: absolute;
    left: -17px;
    font-size: 28px;
}
.mail-arrow {
    top: 23px;
    transform: rotateZ(32deg);
}
.resume-arrow {
    top: 64px;
    transform: rotateZ(-16deg);
}
.github-arrow {
    top: 117px;
    transform: rotateZ(12deg);
}
.npm-arrow {
    top: 133px;
    transform: rotateZ(-23deg);
}
.info-arrow {
    top: 162px;
    transform: rotateZ(-25deg);
}
.social-text {
    position: absolute;
    border-radius: 10px;
    font-size: 16px;
    font-family: Nothing You Could Do, cursive;
}
.mail-social-text {
    left: 2px;
    top: 22px;
}
.resume-social-text {
    left: 5px;
    top: 49px;
}
.projects-social-text {
    left: 5px;
    top: 113px;
}
.info-social-text {
    left: 5px;
    top: 144px;
}
.social-menu-label-block-mail {
    animation: label-animation 1.7s infinite;
}
.social-menu-label-block-resume {
    animation: label-animation 1.8s infinite;
}
.social-menu-label-block-projects {
    animation: label-animation 1.9s infinite;
}
.social-menu-label-block-info {
    animation: label-animation 2s infinite;
}

/* Would've had to import a seperate library like "glamorous" to have been able to pass pseudo selectors as inline styles (in AudioPlayer.js, which I would have used to make the slider thumb below scale with canvasHeight). Also important to note that I wouldn't want slider thumb to scale very much as it would've be grabbable/useable. Against one of my goals for this project, to make all rendering fluidly dynamic without use of media breakpoints, in this particular case it was the optimal solution. Incidentally, when I decided I wanted to tether color and opacity of the audio interface with veilOpacity, I did import the emotion library and for some reason, though fully integrated without its syntax crashing anything, it didn't work. */
@media only screen and (max-height: 400px) {
  .slider::-webkit-slider-thumb {
    width: 28px;
    height: 14px;
  }
}
@media only screen and (max-height: 400px) {
  .slider::-moz-range-thumb {
      width: 28px;
      height: 14px;
  }
}
@keyframes label-animation { /* There is a bug in CSS3 itself, or in React's interpretation of CSS3, wherein the rotate property has to be set to 0 in each of the keyframes of this animation in order to make the social-menu-label-block-projects class visible on mobile browsers (specifically Safari and Chrome, which were the ones I was testing) when mobile devices are held horizontally. (ONLY the social-menu-label-block-projects class for some reason, not the social-menu-label-block-resume nor social-menu-label-block-mail classes, and ONLY on mobile browsers when devices are held horizontally). Don't even ask me how I debugged this and figured it out. */
    0% {transform: translateX(0px) translateY(0px) rotate(0deg);}
    8% {transform: translateX(1px) translateY(1px) rotate(0deg);}
    16% {transform: translateX(0px) translateY(2px) rotate(0deg);}
    25% {transform: translateX(1px) translateY(1px) rotate(0deg);}
    33% {transform: translateX(0px) translateY(0px) rotate(0deg);}
    41% {transform: translateX(1px) translateY(1px) rotate(0deg);}
    50% {transform: translateX(0px) translateY(2px) rotate(0deg);}
    58% {transform: translateX(1px) translateY(1px) rotate(0deg);}
    66% {transform: translateX(0px) translateY(0px) rotate(0deg);}
    75% {transform: translateX(1px) translateY(1px) rotate(0deg);}
    83% {transform: translateX(0px) translateY(2px) rotate(0deg);}
    91% {transform: translateX(1px) translateY(1px) rotate(0deg);}
    100% {transform: translateX(0px) translateY(0px) rotate(0deg);}
}

@keyframes play-icon-pulse {
    0% {color: rgb(1,1,30)}
    5% {color: rgb(1,1,150)}
    100% {color: rgb(1,1,30)}
}
@keyframes pause-icon-pulse {
    0% {color: rgb(1,30,1)}
    25% {color: rgb(1,60,1)}
    100% {color: rgb(1,30,1)}
}


@keyframes pull-chevron-pulse-closed {
    0% {color: rgb(1,1,40)}
    5% {color: rgb(240,1,40)}
    100% {color: rgb(1,1,40)}
}
@keyframes pull-chevron-pulse-open {
    0% {color: rgb(1,1,40)}
    5% {color: rgb(1,240,240)}
    100% {color: rgb(1,1,40)}
}


@keyframes rippleEffect {
    0% {transform: scale(.1); opacity: .3}
    100% {transform: scale(1); opacity: 0}
}


@keyframes motionSizeAndFlip1 {
    0% {transform: rotateY(180deg) translateY(-0%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-0%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-0%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-0%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip2 {
    0% {transform: rotateY(0deg) translateY(-0%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-0%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-0%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-0%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip3 {
    0% {transform: rotateY(180deg) translateY(-5%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-5%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-5%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-5%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip4 {
    0% {transform: rotateY(0deg) translateY(-5%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-5%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-5%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-5%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip5 {
    0% {transform: rotateY(180deg) translateY(-10%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-10%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-10%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-10%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip6 {
    0% {transform: rotateY(0deg) translateY(-10%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-10%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-10%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-10%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip7 {
    0% {transform: rotateY(180deg) translateY(-15%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-15%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-15%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-15%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip8 {
    0% {transform: rotateY(0deg) translateY(-15%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-15%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-15%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-15%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip9 {
    0% {transform: rotateY(180deg) translateY(-20%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-20%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-20%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-20%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip10 {
    0% {transform: rotateY(0deg) translateY(-20%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-20%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-20%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-20%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip11 {
    0% {transform: rotateY(180deg) translateY(-25%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-25%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-25%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-25%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip12 {
    0% {transform: rotateY(0deg) translateY(-25%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-25%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-25%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-25%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip13 {
    0% {transform: rotateY(180deg) translateY(-30%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-30%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-30%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-30%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip14 {
    0% {transform: rotateY(0deg) translateY(-30%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-30%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-30%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-30%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip15 {
    0% {transform: rotateY(180deg) translateY(-35%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-35%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-35%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-35%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip16 {
    0% {transform: rotateY(0deg) translateY(-35%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-35%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-35%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-35%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip17 {
    0% {transform: rotateY(180deg) translateY(-40%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-40%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-40%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-40%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip18 {
    0% {transform: rotateY(0deg) translateY(-40%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-40%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-40%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-40%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip19 {
    0% {transform: rotateY(180deg) translateY(-45%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-45%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-45%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-45%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip20 {
    0% {transform: rotateY(0deg) translateY(-45%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-45%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-45%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-45%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip21 {
    0% {transform: rotateY(180deg) translateY(-50%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-50%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-50%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-50%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip22 {
    0% {transform: rotateY(0deg) translateY(-50%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-50%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-50%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-50%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip23 {
    0% {transform: rotateY(180deg) translateY(-55%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-55%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-55%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-55%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip24 {
    0% {transform: rotateY(0deg) translateY(-55%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-55%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-55%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-55%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip25 {
    0% {transform: rotateY(180deg) translateY(-60%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-60%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-60%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-60%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip26 {
    0% {transform: rotateY(0deg) translateY(-60%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-60%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-60%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-60%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip27 {
    0% {transform: rotateY(180deg) translateY(-65%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-65%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-65%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-65%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip28 {
    0% {transform: rotateY(0deg) translateY(-65%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-65%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-65%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-65%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip29 {
    0% {transform: rotateY(180deg) translateY(-70%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-70%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-70%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-70%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip30 {
    0% {transform: rotateY(0deg) translateY(-70%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-70%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-70%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-70%) translateX(-100vw); opacity: 0}
}
@keyframes motionSizeAndFlip31 {
    0% {transform: rotateY(180deg) translateY(-75%) translateX(-50vw); opacity: 0}
    1% {transform: rotateY(180deg) translateY(-75%) translateX(-50vw); opacity: 1}
    99% {transform: rotateY(180deg) translateY(-75%) translateX(100vw); opacity: 1}
    100% {transform: rotateY(180deg) translateY(-75%) translateX(100vw); opacity: 0}
}
@keyframes motionSizeAndFlip32 {
    0% {transform: rotateY(0deg) translateY(-75%) translateX(50vw); opacity: 0}
    1% {transform: rotateY(0deg) translateY(-75%) translateX(50vw); opacity: 1}
    99% {transform: rotateY(0deg) translateY(-75%) translateX(-100vw); opacity: 1}
    100% {transform: rotateY(0deg) translateY(-75%) translateX(-100vw); opacity: 0}
}
